<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsRAAALEQF/ZF+RAAAAHHRFWHRTb2Z0d2FyZQBBZG9i
        ZSBGaXJld29ya3MgQ1M1cbXjNgAAAWhJREFUOE9jYKAHaD8+4T9F9lTvLf1fv6eGeEOaj7f/z9wV9z91
        a/T/xPXh/+v2lP6v2lH432dK+j+CLmk42vB/1oVJ/zfeWvV//c0V/9fcWPp/1fVF/5ddnf+/YF3Gf5ce
        27s4DZl6bv7/KWe6/2+4ufJ//b6y/1HLAv6HLvD5X7Qx63/+2vT/zh1x+F1QvCf/f9LGiP+xq0P+l2yp
        gPs5fn7i/+zFmWC+lK8UF0FvwBSUrWsAa8pbWkl8AMI0Zy0r+B87NwGuMXVG0n+jEp3/unka/zXSlR/i
        dYXP7KL/mSsS/6csjvlvVW/y37TS4H/EtID/vSeb/icviP6vmCA/C6cBAdMD/6cvj/8/7WzP/8lnOv9P
        ONUG1Nj8v/tEw//0ZfH/lRLkzkpHSTjidYH7pNz/sXNC/0fMCPyvV6D5XytL9b9aqtJ/5QSnvwQ1w0yO
        nxz/36/Vl/TAQ3aaRlrQX6KjbMAUAgDV/qyNvAqcTwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="buttonDelMark.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAsRAAALEQF/ZF+RAAAAHHRFWHRTb2Z0d2FyZQBBZG9i
        ZSBGaXJld29ya3MgQ1M1cbXjNgAAAg9JREFUOE+Vk11v0lAYx5uYmDR+gF3IksXdiGnmovMCwmAWBiET
        J3Glg40JdG4lA8ZGIGxI1AtN/CjyQbj3xitufImygUwHa7fi6d/TJkwJ1GRNTnKSPr/f89YyzBWfD37/
        DUvkRJanurkcZxXQEeNcLxrNn4QFz0iMAaN0AL1YRleWRyQdUeTOExIuttPohJ68/+4N3rmUDGBUX0Gn
        h+QL6EjSpcSEN5LoZ3JApQrj3vIF8gLDXDMldUFg+9m8rh+8AN6+AylX0Jd3YJRswvEEtJ0sQN+rGwn8
        8PpJjWGuD7VRdwjsRTpDSKEEvH6D3/tFnCclqOvPoKUzQPnQvLf5RVKz2dixc6o7HKyS3CT9zC5QfQkc
        VilYAUplqGtxtB/6rOGB0ZB0I1EdZdpOLA6IMaBQRHvBq1tm/recZljk1Ng6QLcBYRV4GgF29/BzMYDP
        c3OWKzYdzXCYU6Jr0KQtYK9AwX0gS9uhA1RXIui43GjY7eMlJrwag5Z6DtA1KmIULbeHHDldeu/RMrC1
        jbPQMlr3H6AxPT0sMWHaq5bcpFnzUGjprXmPOTDjfLt7j5z6/EAyhV4giCNuBh8nJv9K2qEQfyaI0BIp
        KCsijl3uoWnXGBv75bad/HIvQAku4XhmFo2Jm/zQKpu8nz9dekzh+bHTph8O+2nqFhkLD0xfnU7+f6sy
        JCOZr/g3j4T/AYy1PG7LugEEAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///4j////y////8v///4gAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZmZgZmZmYGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8w////av///wr///9I1NTU/25ubv9ubm7/1NTU////
        /0j///8K////av///y4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVj9MiN36lOGRn
        aSRmZmYQZmZmBgAAAAAAAAAAAAAAAAAAAAAAAAAA////jOLi4v+/v7//+Pj4/////5Smpqb/ZmZm/2Zm
        Zv+mpqb/////lPj4+P+/v7//4+Pj/////4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWP
        04QYjc64LYOzdER3lExmZmYiZmZmFGZmZggAAAAAAAAAAP///yzl5eX/bGxs/2ZmZv+Li4v/r6+v/3Fx
        cf9mZmb/ZmZm/3Fxcf+vr6//ioqK/2ZmZv9sbGz/5eXl/////ywAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFY/Tghma3P8Vj9P8HIzKviiFuYI/eptUZmZmJGZmZhZmZmYI////XMjIyP9mZmb/ZmZm/2Zm
        Zv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv/IyMj/////XAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAVj9NqFY/T+iSy7/8WpOT/Fpvd/xuMy8glh76QPHueVmZmZiiDg4Me+/v7/5OT
        k/9mZmb/ZmZm/2ZmZv+JiYn/uLi4/7i4uP+JiYn/ZmZm/2ZmZv9mZmb/lJSU//v7+/////8GAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABWP01IVj9PuOLnx/x2w7v8Xrez/FqXl/xad3v8Zjc3QIojBmoG7
        3Lq53PDuq6ur/2ZmZv9mZmb/s7Oz/8rs+v+NyOj4vtnptv39/cizs7P/ZmZm/2ZmZv+srKz/////pv//
        /1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFY/TOBWP0+A4tu7/Nrvz/xet7P8Xrez/F63s/xem
        5v+V0/H/z8/P/5ubm/9wcHD/ZmZm/4SEhP/+/v7/+vr6/7Ozs/+zs7P/+vr6//7+/v+EhIT/ZmZm/3Bw
        cP+bm5v/z8/P/////4oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVj9McFY/T0DWy6/9Dwfb/LLbw/xet
        7P8Xrez/F63s//X7/v9tbW3/ZmZm/2ZmZv9mZmb/r6+v/5DY9v+2trb/ZmZm/2ZmZv+2trb/////hK+v
        r/9mZmb/ZmZm/2ZmZv9tbW3/////9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWP0wIVj9PAMa3o/0PC
        9v8/v/T/IrLu/xet7P8Xrez/8Pr+/3BwcP9mZmb/ZmZm/2ZmZv+srKz/ldn2/7m5uf9mZmb/ZmZm/7m5
        uf////+KrKys/2ZmZv9mZmb/ZmZm/3BwcP/////uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWP
        07AtqeX/RML2/0LA9f86vPP/Gq7t/xet7P+R2Pb/2tra/62trf90dHT/ZmZm/319ff/9/f3/+/v7/7m5
        uf+5ubn/+/v7//39/f99fX3/ZmZm/3R0dP+tra3/2tra/////4YAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAF47RoiWm5f9Dwfb/QsD1/0LA9f8yufL/GK3s/xet7P9PwfH/k9n2/7Kysv9mZmb/ZmZm/6Gh
        of/7+/v/tdnt4PDw8Kb7+/v/oaGh/2ZmZv9mZmb/srKy/////4j///8+AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACCJxCwYjc/OLKzq/0PB9v9CwPX/QsD1/0C/9f8ptfD/F63s/yKx7f/4+Pj/hoaG/2Zm
        Zv9mZmb/ZmZm/3l5ef+lpaX/paWl/3l5ef9mZmb/ZmZm/2ZmZv+Ghob/+Pj4/////wwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfisYoGY3Nxh+c3/9Av/T/Q8H2/0LA9f9CwPX/QsD1/z2+9P8fse7/b8zz/8XF
        xf9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv/FxcX/////YAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIIrEJBmNzcIdnN//QsD0/0PC9v9CwPX/QsD1/0LA9f9CwPX/QsD1/ze7
        8/83uO//7Ozs/3Nzc/9mZmb/mJiY/7CwsP9zc3P/ZmZm/2ZmZv90dHT/sLCw/5iYmP9mZmb/c3Nz/+zs
        7P////8eAAAAAAAAAAAAAAAAAAAAAB+KxSAZjc28HJzf/0LA9f9Ewvb/QsD1/0LA9f9CwPX/QsD1/0LA
        9f9CwPX/QsD1/y238f+N1vb/7+/v/9PT0//9/f3/n933/6ampv9mZmb/ZmZm/6ampv+w1+3k/f39/9PT
        0//v7+//////gAAAAAAAAAAAAAAAAAAAAAAhicMaGozMshub3v9CwPX/RML2/0LA9f9CwPX/QsD1/0LA
        9f9CwPX/QsD1/0LA9f9CwPX/P7/0/yOy7/8vte7/WsXy/xqu7P9YxPH/1NTU/25ubv9ubm7/1NTU/1i6
        6f8gjcq6t8fQeq+vrzZmZmYEAAAAAAAAAAAAAAAAFY/TFhqNzaodnN7/Q8H2/0TC9/9CwPX/QsD1/0LA
        9f9CwPX/QsD1/0LA9f9CwPX/QsD1/0LA9f9CwPX/PL30/xyv7f8Xrez/F63s/xet7P+U2fb/8/v+//P7
        /v+U2fb/F63s/xae4P8ei8eyTHOJRGZmZhwAAAAAAAAAAAAAAAAVj9OOF5LW/x+b2/8sqOT/Obbu/0LB
        9f9CwPb/Q8H2/0PB9f9CwPX/QsD1/0LA9f9CwPX/QsD1/0LA9f9CwPX/M7ny/xmu7P8Xrez/F63s/xet
        7P8Xrez/F6zr/xep6f8Wo+T/Fp7f/xaY2/8Zjc6UZmZmBAAAAAAAAAAAAAAAABWP0xoVj9NOFY/TfBWP
        06oVj9PcFY/T+BWP0/wVj9P/Kabi/zm37v9CwPX/QsD1/0LA9f9CwPX/QsD1/0LA9f9CwPX/KLXw/xeq
        6f8WouP/FY/T/xWP0/wVj9P4FY/T3hWP06oWj9J8FY/TThWP0xoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFY/TAhWP0wQVj9MWFY/TRBWP03QVj9OkFY/T4iqm4/9Ewvb/QsD1/0LA9f9CwPX/QsD1/0TC
        9v8opeP/F47Q6BeO0KgVj9N0FY/TRBWP0xYVj9MEFY/TAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVj9M8FY/T+kG/9f9CwPX/QsD1/0LA
        9f9CwPX/Qb/1/xWP0/osg7RUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWP0wIVj9OgI57e/0bE
        9/9CwPX/QsD1/0bE9/8jnt7/HYvIsFZufAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWP
        0ygVj9PuPbvx/0PB9v9Dwfb/Pbvx/xaP0vAxga08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFY/TAhWP034fmtv/RcT4/0XE+P8fmtv/IYnDlEt0iggAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFY/TIBWP09Y3s+z/N7Ps/xiOz94ygKwyAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFY/TaB6Z2v8emdr/JIe+gFZufAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVj9MUFY/TyhaO0c43fqUmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVj9NSFY/TUgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////+H////h///8AA/z/AAP8HwAD/gcAA/4AAAP+AAAA/gAAAP4A
        AAD+AAAA/gAAA/4AAAP8AAAD+AAAA/AAAAPgAAAfwAAAD4AAAAfwAAA//4AH///gH///4B////A////4
        P///+H////x////8//////////////////8=
</value>
  </data>
</root>