<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr0AAA69AUf7kK0AAByZSURBVHhe7V15dFVFmsckICoggiIKgqCCCgqyE2JYwiaI
        EBDZFJTVmISsLwvZXraXPSFkhyRAQoAQdkFcQGQRUHBBXLHbdumeOX16Zk5Pz9LTZ/74pn51b91X7+be
        m/degnP6dO45v1NffVX1fVXfV/u9L+nS+XQ+nY+Xzx19h40ePygoeNXwRa9GDH9xo+0fBi+8GjF4+sKV
        fYePHMfs0F0xx6/z3AGDT0mvP7Xo0Ff/s/D4TVp4TIVMMyzS83TpAjyfGUQZk7Iewxs5KGNUjvEWgX/o
        xl+npG0/MXDqC8thH8VMHf90Hfrcytdn11/45YWj35GGYxLd4bjpGu9oXd7IMyuj8ufUnf1pyNwX1zF7
        +Slm64Dn9vsHDQnM3//hgqPf0gKmZMERFgKgwZPjR1SeoHlcBY9L+TlUnpAlQpnHaTUuaE2WHEq0pk+G
        nF8uI4PxhXxNn0rLMnl9pHycFviOns3a80H3/v0Hqyb0/rln2Ngpc3Zf+dPzTLBHOKxCz5NDma/nyZDT
        VHq+Pk3IMMjbKl3lt5Khh55vlk9Akg3M3nXxj30eGzVBNaXnzz1Pjg2Y3fTJX+Yf/oY4Dn1D81Qa4TwW
        F2kyraULoJwKkablA18OZUg8TbcIpXQ5zUU34mqaoIVel3yIi3wCal5Ba2BxuSwvp/Jd4gzIN7fxoz97
        5YTb+w0aOmvnh3967uDX9Nyhr5lAJWwFNb0V3Sa+scivSxO0UX6Jp9WR8WRapGswkmeST263mQ3ass2s
        ugv/7Ol01NXf0XR5LhMw9+BXDEahoFW06NNFmi6fxhOQ423l+4o1Suab53ON6/lG6QbQ2gSI8gKCJ9L1
        cde0yZm7zjO7+irmbeMZPHtZyBymXMMBJZwt81q+lGg5rueb8Yz4ZvkEkC7n0cV5PVkcoVpnZ7qaV+Or
        0MdlWKUJuOQxkC9h0Izg9aqJLZ8e06vP/NOsA1/SbAYeNjtpAcS1dB0th3K6EXgeVb7Q4wm4fINyZnx3
        0GaddXJbxSVajgdWvPMjs6/1OWHg1IXrZzXfYEJv0MwOgJCll9mWfDm/Pq+cpkdbaSI0yyOgz2NWxkqO
        Pg3x/v5zX1ZNbfyMS645G7T/CzLEPgMe51+noKZPKaj2vIKmz1S+Lp8RRB538raJG6ocFhqlteJ5iLbq
        6EYbxsSVnVJNbfj0mt5w7W8zmCAF19XQGZ/OeQqmlb1FQWEpNGfZapq/eCm9sHAhLXhhIc0PXkKzV4dQ
        UGoVzWi8JpXXQy9fhtBjxZdDo7x6GJWVsFeOy/nMIOfV8+V0Z77p9Zf+A3ZWzK177h4+avr0vcywDAhd
        8Tnnc9RfoqDQFFq05EVavXo1hYaGUqzNRomJiRzR0dG0adMmWr58Oc17aRVNz9tnIlOVp+MJvhVPn+65
        jM9d+EZQ8irtduU5aTneCk1KKPKIsOcjj09WTe76PBC4YOPUps/JEg2f0Ox1kfTKK69QQkICbdu2jfbs
        2UNHjx6lkydPchw6dIjq6+spJyeHwsLCaMlLyykocSsr/1lreTL26EI9X6b1eToSRrLBE/ydV2hq9Vma
        WsNQe4Hx22iXDvf7z3lVNbnrM+j5NamBTJgpGj+j6anVtObVV8nhcNDhw4fpypUr9PXXX9NvfvMb+t3v
        fsfx/fff0/Xr1+n999+nXbt28VGxfCUbCTlNxnJ/LbD6G/LdASv7bG4zBa2LoucWLeHT7cJFi2j+osU0
        a9kammYrpMD6y8ZlBVT9A+essKkmd30eXrje8Wzjp+QEU8qhxnd9TMHr3iC73U5vvvkmffXVV/TTTz/R
        73//e/rDH/7ggl9++YV++OEH+uSTT6i5uZm2bNlCS1atoWdrLzrlaTrkuAw5zSpfW2hdNkCjzeQ6+QFs
        1E+NzqVgNuWuXbuWoqKieKdKSkoiG5t6Q0JCaMWKFTR7+asUUHlGkmGMh55btUU1uesDB0xhyqY0fMqA
        UNBKPLDkGG0KeYNPL59//jn9/PPPrQwvA4758ccfuRN2795N4eHhNItNRVzubiH/EwpgNBrp1Id0JUSa
        nueSrxUYH/Ik+bycVtainByXyk+LK6IVbATHx8dTZWUltbS08Kn2rbfe4lMvRnl2djZt2LCB5r6ykabU
        X+HlRJtc22bhgEEL1zr8mWIX7HLSQdm7uedPnDjBpxwjo+sBJ2AkfPDBB5SXl0dLN21mMq+6yDXGNSVs
        K98uNZ87gCwXeW3puEYBZW/T0lWrKSUlhQ4cOEAff/wxfffdd7xNmG5hhy+++ILeffdd2rp1K3fC9MRS
        A1lODDB1wAtrHZNZg8zwnL2asrKyuDEx9RgZ3AiYjm7cuEENDQ20KTSMprBhaiTfbew04N0izIwroGg2
        5ezdu5eva0ZTLtp38+ZNeuedd7h9Fm8IZ3W8aigPsHDAa46JrCBHvRJOEjTDjIIWvrO5cOFCm9OPHugp
        GDkYQTMcjU7ZcqjqFLqFXpEu4i60iDPIdZVlupQXtBTX0vV0/ce0JCSaCgsLeZsxnRq1DYAT4KCdO3fS
        RrYmTK4449Sn1kG0b8AcEwcMfP41x4S6j2kCUwxMVEOBgNKTlME8fPbsWY9GAID858+f5w58Pj6fuB5J
        F4cRT/DNePrQCvo8ctyg/MSaC7QhNJyvXxjBRpsNGehkx44d4wtzYN4B4zox3gNWDhjPMoyvZaj7iIUM
        CMFj4cTq8xSVmsUXoN/+9reGlTADesinn35KVVVVtCrcxmRfUeXKEPp0kOuh0W3BQh4g2ihkCkh5/IuO
        UmysjS+02FobtUsGRgimoaTkFApgZTX5CCXZlg4Yu+MKjd3xEY1lBTgQ5+FHNI7RL9u30v79++mbb75p
        s0fogTKYS98I30wTy96jcap8JYR8RQdCXgdVt8JT68Ecx8sgndMsHXlAixDpIo3nU2Q5ZSt5FKhxll+k
        CdnTMndSWloavffee5bTjwAW5bfffpsSU1JpIpuCeL2YLFEXoc/UAQ8yB4xhmcZsZ0C447JCizgLZzsa
        qKamhvdm9GqjipgBo0asA4GZu5k8VT6X3VqXUgcpjjwarfJ1cTRS4xnRep6FzLlbSvjO7eLFi26teWjf
        8ePHKSLJrsjVdLjKfWDmCnMHPMMKPlPDgFBPM0wsPkG5+fl8UfJ2HcjNzaV5cXkucrkeATmuz2NF6/Pr
        06zyyXw1XByTTuXl5XTt2jW3Rju2p9iqrk3OcZUpoPL6mTpg3hrH6OpLNIoBoQzOq7lEz1SydcDu4IcQ
        T9cBNEKsAytDYzQ9o5hcjdbBRb8OgqelMTmGoUTLusBzkavGFd5FWh0Rxw+d7izAwJdffskPZS/atzll
        CnmSLksHPF39IT1d9SGNUgFaxEXay2nF2jpgVBEroMy+ffsobHMEjS0+qchncoV8WY+LXgEp/Zm8IzQh
        bhtNeSOVpq6LZojhCATW22hSVB6NyWnRZMlopUdHP1P6LoVGRvFrFPRso7bIkDvX7Mx6Rb4RmGxTB/Rn
        DniKZXqqkoGHF1nIgJDT4F+kWWxxwjrw2WefebwQ4wSJ0YN7lGdTtyu6NPkIFR0ucZGuYoy9gaavXE8L
        g4P5lfeaNWto3fr1tGHjRgXsNPraa6/RqlWrKHjxYpr50moak9HUSo4GWY/a7vHMcfEJCfzOy52RjvXw
        8uXLVFxURP65LZKs1vW3dMDIygs0skLgogqZvkgT8o9SXkEBX5w8XQewmKFcPltH5kel0wghm1VM1iHr
        1PKwcEJELgW/uJQbGRd8kIP7mdraWqpnhyAchOrq6qi6upqKi4spOTmZNjKnBC9dRpNiiiW5ctiaDmCd
        IyM9nc6cOePWDgh2wPkoIzOLnik+xeWM4G1yyh7BQysHzF3jGFF+gZ5kQChoDiZA8J/a9j5Fs3Xg1KlT
        vEcbVcgMGDG4yNu+fTu9HBpNI8rOaXI1XTqIuoyPLaHlK1fySzGMQOyo4EwM/etffEE32BzMwebsz5gO
        9EiMNuiKi4ujZctX0Lik7bwtcOqTFecVvWrbNLD4nLh8fgL+8MMP3drtiZFtS7HTyLIPXOruIpuh38xl
        xg7oN/cVxxNl54mjXIKIizSGZWmlfC73Zh349ttv+W5hc0Qkjc472lq+ThcwIv8kLVnxMu/RKIudCU6e
        GFFwKgeTDUAH4khDnqtXr/I1i1+JMxkjC086ZYs26nQujkzhIwvOdWeaxUENL6LWJzlc5LjIV3XcO8PC
        AY9vO0fuYGpmA19wUEFPzwPoLTiwwJj+ydsN5esxJTyTIiMj+ds3rD2YFmTDCOMLB2h8lgd5Uc/GxkZ+
        lx+0KcFQh4y1YRH8CgI7G3ccgHcjqNtLSYWG8mRYOmD4tg9oeKkTwySaQ00flXuUsvPy+b7em3UAQxvz
        97zIdEP50Ct0P178Li17bSMVFRXz8wdOnHqjmDmAp7G8KAOdeIW6Zu06Guk4zGSfc9ElgNG2OSqa3/vj
        llMvTw/IF9Pq7NQqTa4SCjjbY+6A2ascw7Z+QI9xnFWhxDmfFVboszSs5AyFpzq8uhcSFcY8voqtA5AF
        +QKaHh6epVGpu9l0FcGnEbz+NOqRZsYXQBlsJ3FZhjUkMDJHla9Coken7+HTFdrmzhoH2R999BF/HzAp
        o9HZFpd2ONHHzAH3Mgc8WnKWHi15nwGhnnbFi8lF/G7HzChWwDoAg4Yzw45wHDGULzA9IpPSM9Lp9OnT
        vCcbybMaAQIYqViYYSi8GHqs+LShPv+Ecn6v7+6tL0Y0ZoLsnBwa5TikyjGxG+tQfWYsNXfAI8Xvk7sI
        SKunarYO4JWjN+sAdlE4D0xIqtFkDpXkcxSdpqWvR/ErgatXr5nqcccB6CToLNg8bN68mZ5ObXDVpWJW
        tINvYeEsd9qFToFb0Pi0DBpecMpQpow+0ywcMLToDA1RMbRYF0o08GT2IcrO9X4dEOeBORF2RbYKoRN4
        IuMAhYVv5iPN6gbWyvAyYCzcbmZkZFBQuKtegaVhcfwc4e5BEzstXFm/npTJyp/mMoSNeDukELzeZg7o
        O3OV4+HC0+QuhhS8R5tTvHs/gIahgXwdeCOShshyEbKGgMbhCe9j2zpztNX7BdCjMWKxg1u94XV6JO+U
        phcYmv82rQuP4jsajBYjGXpgOsWoWpGY46y/Fp5R2qK2B7B0wOCC0zS48D1yhgysEI8L8LiSZ1FSMTW1
        dx3YHEHDMg9KslX5jH4+xMang0uXLvNRYyQHcNcBAPRizx4TE0OjE6qcOlk4LPMQRUbH8m+e3HkJgzbj
        4IfT99wtpaoc1W68Hc62CJ6pA+5hDhjEMg3KVyHTMk/iT0itp4qKSrrWjnUA54Gx8RVOuWo4JOsorQ8J
        5TeMbd1Iumt8AOcCfFiAa/G5IfFaW6D3qaQ6Xh+cU8wWfBmoEw6FZWVlNCml1mkf0RZJtuD1DrRwwEN5
        7xJHvhoa0SLOwkezjlC6I5fOsgb96OU6UFBQQLPDU2mg0KFilK2CbxmxdWyrN3riAHQUbIPRa9e+Hsod
        LdrjH1NI+Mbn3Llzbu+AcL7IY2eikfa9rrZSZerjvQOXmDlghWNA7jvEkSeFAiw+UKPf5RiY+zaFJGXR
        sePH+WJkVEkzoPeIA8zKkEguyyn/HZoRmsJ7qTeLfFuAQ/H2Cg4eG7NV04kNAbap+P7HnRGN0YTtcbI9
        g4ZkH+MyNHvpoab1MnXAjBWOB1kmgQHMIAotQiO8TfMTi6mhcQ995eU6gDv38IhIeiRtvyb3oew36eWN
        odw5WKw9nd7aAhwqRt+CTTE0IIe1Mecdeik8juvEJybutAWbD1xZh22xKzJY3WHoB1W6FZgOUwfczRzw
        ACv4gEMC4m1gXNIOKiuv4HOhN+uAuBcabSvXZA5LqGOLYTQdPHiQn2A9dWxbgDysK7jvCQkNo6HM+QOy
        T9CmyBhqampy+5JRvIZ8OT7TxSYu0NnS0gH9HaeII1sN3cDD9hayZ+eyhe2cV+uAuBeaGZaqyZy42UHp
        6dan3/YCUyaukPGx8bO2YjYCm2lLUrLbn6EA4jXkvIRCF5tYoUeAhQPuz36LWuOUAc/J7591gq0DmXwo
        ersO4Dyw8o0oLuv+7JO0eFMUvzjDXGy1/dTDk+0o5OLzeugOTcqg8Wm7qKSkxG2no+64Za2qqqRJiZWS
        Xaxh6oCe05Y5+mW9RQL3ZZ1UaYQyLYcK5iUU8cMLrmU9nS7EeSAyKpoeTt1Pg1L2UShbE7yV5y4gF+cX
        vNipYiffsKJaXg9crLnjdEy3uK4oKiqiJ5J2tbJJayjpPQKCzR1wb+ZJErhPF1rxRiVup/KKCv7yw5t1
        AOeBzMxMGpNYQ+Pjytn0k+HdlxcqjNKMgJ6OkzGuJ06cPMGvu909VGIhV15DZtLA1AOGdtLHEVo6oG/G
        CRK4V4VMi7jgibB/2iFKy8rhFXLnHaoM9LZLly7x3ccyexmtSi3iNHjebD89PRPAyRhp+MwcoxFOcccB
        6DjoJNFJaXRfxpsuNtHbSKbvtHJAn/Q3qU/6CRWgRdxJ99XSQSt8hK8lZpEnC5gAGosdCe6Uymp3UfmO
        ek5jgfvlF/enH8hB/l9Y6I4BBeAEdAI4G6G7Ixgva7BLW812QLJNnLbS20uxk6kD7mIOuIdl4LA7QxTU
        8zRIaUFxxR69xpOBxRsLGkYQrglAezL9wHA/sJ773c3vGW7yXuzpVOgpMFXhNeeCuFxuA81OVmB2utPf
        wgG97cfJWzwRv51KS5Wdi6eNhwFhcOyrAQxv8Izy6gFnoywObGnN71HlsTN8ZwUZRvk7AtDJT/FsB+Vv
        22poDzOYOyBwmePutON0d9oxBoQK3bsVTx9X6H5JzZSS6eC/jvR0HUCDADgOEHGjvHogP+Zv7GaC8g/Q
        vIJmPoVhWrtVowByxWvIkXFVqg2ETVrbRo5bOGCpo1fqMfIWd6ceoVcTvFsH2gPM3di9lFZUUv/Ug3R/
        ykEqLKvid0iedgR3gdEpXkM+lNBgaA8zdPdfaOyAOwKWOnqmHCV30QthqsRj9AxbodfrgLcQF2sbUvN5
        nYAXk4v5nT92NbeiHnAsXkPGpaZTn6QWF7vI9jDiWTqgB8vkxBEVajxZSktmfDmupg+zVVOpeoK9VcNf
        BoyL6QfXAZPjy7S6PRFXww9XuJ9ydy3xBOI15KaENOqVfJjplezE0BP2keIcqr0sHXAXK9ge9E3YR0kZ
        2XTGi3XAG8C4OC8UFBXTwPjdWj3u3tJCMem5/FrhVizGGFl4Dbk4Nsul/e6g+yQLB9yZdITuTDrMgNAI
        SDtMdzH6Lh4qQJrgLU/I4a/03Pmoqb0Qh6GwlGzqseWQWj+lnjPji2kvM1JHX2dAlngNGRhToOlz2kix
        hStfsRvQzdIBWw7THQwIOY1Cgpb5IlTTtTQW948p5l8pY2q4lesAZGMvjuvjWfFFrvVgGGirp6Ktpfy+
        xpsTtRmgV7yGfDpmm6ZP1q2Pc1q1lakDbmcOuIP1IgUopNDddTxnHLQzn0gfEFvLbxXR8Fsx/wpANtaa
        bcwQD9tqlXolKvUD7kw8SOtTcvmW1NNbWitAr3gNOZC1VbMH063YROCwRsv2sXDAEkd3NEDF7RLtCXrG
        76P4tEz+8/1bdZcPQDYu0Wx2B/VIaDasy8TYUr5AYzR21KYAaxvWliR7BvWOazLUawVLB9yecJA0sB7k
        EncBcxBCJlAJpTRGvxSXrb3NMmpEe4FpAAsh3kbNiytw0a3RDH1sDZSZ1/Yv3T0BTt049IUnpFL3hBZD
        vRrPgN9t0gJzB3RDBjPEG/BMMDm6kP/A7VatA+jNuEbGF2zDYyoN6yCwJCGfjhw50mGvNrG5gOOXx6Yb
        6msLfhMsHNA1voUZuoUQOsEKqnTrNGMMiKqh4lu4DqA34+LOnp1DPW17Desg8Eh0JVXX1Hj1DasRcMjE
        YXNGdK6hvrZg6oCu/swBcSwTgMwi1MEPoT4fg5+Uv0fsHoq3Z/E5+lasA+iF6NUr2JZXq4ukX6NZeAdz
        UHxGToecCTCClNeQVTQ6sthVp6SX20JOEzQLLR2Agn5xByygCHfS+nQFXRlesmXx64COPg/ACPhsBPvw
        0TGlOt3GdQqKLbD8fYG7wAjCqC4qLqZBkZWGulpDZy8rB/iyDL42FYKWeR7ER7Eegl8vuvuNjbvAnh7f
        9OTkF9I9Mbtc66mnVfSP2k4lpdv4S/j2nAlQFre96ZmZ1DN6t6seXftdaIln7oDJzAG2ZpapmXzUUMEB
        FlcKK3wlBE/kU2jkEWUP0H1RO6igsIhfFXTkOoA9PXYhG5KyyU/VJ+oh9Mt1AbrF7qMNyQ46yU7N7TkT
        iB1QSKLdpa2uoQylHnLcwgHBDl7hWAkijlCGnEefTw27xeyhiJRMfmvYUfcxGElYBPHXt/xjilx16qGr
        0+jorfyEjhHpzWIM3fhgC79VmBfjaK3HTVg64DaWoSMRHJNF+PSwo66FMZIwjRSVbOUjzEinGXpE76KU
        7Hx6n+2evOkQcBq++igvr6BHoioMdbgDH2sH7KfbYnQAT/CZgC76NC3OFOj4IyJK+IdP2Dl0xBYQUwA+
        ZcQPQ3xj9jp1cX1ooFO3Fgqw+IToYv690fXrX3g0LaLzQDdGcww7eXcVujl07Zb1y7Sax2eciQN8mQNg
        3I7EnZE7KTU7l+/Z27sdhRFwC4kX4ZNiSwz1tYWu0Xvo9fQiOsWciIOZu50Ciy86UV1dPT0VU2Yo2134
        jJv/6zkAmK5uAXEt3J5RAAfiu/1Mtvu5K7rBUJc76B29kzKKy/i5AHM6jGs2PYKPdJzoDx0+TC8kl7Je
        vM9Qrrv41R3QM7KO0vNLuPEw93qzFmC6wOK5p6mJpsV51/tl9IrZTRtzq+nosaP85TrOB9gdoX4Aphu8
        6gQfaw5+tB1sryCfdhofMHfA+AV2owLtxW3R+2hEdBntYMMXixh6sidOgPExevDed5l9G/lFNzG57TcE
        evLIxDoKK6qj7Q1N/BXjyZMn+PU1dO1rOUQVu/dS3NYdNCmppkOMD/iNmWP8t6N9Rkx7w6hAR2G0rYJ2
        NjTSZdajbrLe9fPPyucnRkYHH4ZHT8Tce4QZ55XMcvJji5+R7PYCxu0R00j94xqor62ResQ2agutUf72
        oOvj/sb/S8Z34PA5RgU6EoNtdVRQVcsXwavXPuG/qsFiiOsKADSGPT56wpEfH+0W7dhNk5LZlrODeuD/
        J7CL9Ov/8FTV5Prnrn6+kY3/a1TQe+zjU5DM68pOpbPsOyi5rI5Kdu6lxv0HqLnlIDUdOEi1Tc1UVM+G
        fXkDLc3dSU9s2cl7oiirOOHv1xG+m3f+FzP0vYq9Wz+3+S7dcsWoYHsBw5n1YOznYWRlyDvzmeX/e4Zv
        sO0c7KyY2+DxG/FspFHBTnQM/IZNDFFNbfawaWhT1b8YFe5E++C3vvSPzMB9FDtbPH5Pz0w1EtCJ9sFv
        RGCcauI2n14+K+1fGgnphHfwWZr6ObPrnYp53Xl69ZngG7LjP42EdcIz+L5e9ecud987RrWs+4/Pg8OW
        +YTX/9VIaCfcg09o7X/7PjA0WDWpx89tPgMfXekbUvMXI+GdsAbr+f/u23/IEthRMae3T897JvuusH9n
        pKQTxvBZmvJllzv6jlct2CFPb9+npjl8N2z7NyOFnVDgt37bv/qOCMhg9jL+f5Htf7o/5PdkQJrPkrgb
        vmF1fxNvyP5Rgfb7htb+zSfYdt1v+ORkZqABip1u/dOtS7duj/n0G7rC70n/NN9n5pb7jptf/Q+DMXPL
        WLtTfe4fvLzL7bc/yu3R+XQ+nU/n8/f2dOnyf4Vw49nNTuDrAAAAAElFTkSuQmCC
</value>
  </data>
</root>