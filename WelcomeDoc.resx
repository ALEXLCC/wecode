<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>